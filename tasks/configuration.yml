---
- name: Create the directories for site specific configurations
  file:
    path: "{{ nginx_conf_dir }}/{{ item }}"
    state: directory
    owner: root
    group: "{{ nginx_group }}"
    mode: 0755
  with_items:
    - "sites-available"
    - "sites-enabled"
    - "auth_basic"
    - "conf.d"
  tags: [configuration, nginx]

- name: Ensure log directory exist
  file:
    path: "{{ nginx_log_dir }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    mode: 0755
  tags: [configuration, nginx]

- name: Create the nginx.conf configuration file
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx.conf"
  notify:
    - restart nginx
  tags: [configuration, nginx]

- name: Ensure auth_basic files created
  template:
    src: auth_basic.j2
    dest: "{{ nginx_conf_dir }}/auth_basic/{{ item }}"
    owner: root
    group: "{{ nginx_group }}"
    mode: 0750
  with_items: '{{ nginx_auth_basic_files.keys() | list }}'
  tags: [configuration, nginx]

- name: Nginx sites DEBUG output
  debug:
    var: nginx_sites

- name: Create the configurations for sites from nginx roles template
  template:
    src: site.conf.j2
    dest: "{{ nginx_conf_dir }}/sites-available/{{ item.name }}.conf"
  when: item.template_file is undefined
  with_items: '{{ nginx_sites }}'
  notify:
    - restart nginx
  tags: [configuration, nginx]

- name: Create the configurations for sites from custom template
  template:
    src: "{{ item.template_file }}"
    dest: "{{ nginx_conf_dir }}/sites-available/{{ item.name }}.conf"
  when: item.template_file is defined
  with_items: '{{ nginx_sites }}'
  notify:
    - restart nginx
  tags: [configuration, nginx]

- name: Create links to enable sites (in sites-enabled)
  file:
    state: link
    src: "{{ nginx_conf_dir }}/sites-available/{{ item.name }}.conf"
    dest: "{{ nginx_conf_dir }}/sites-enabled/{{ item.name }}.conf"
  with_items: '{{ nginx_sites }}'
  notify:
    - restart nginx
  tags: [configuration, nginx]

- name: Create the configurations for independent config file
  template:
    src: config.conf.j2
    dest: "{{ nginx_conf_dir }}/conf.d/{{ item }}.conf"
  with_items: '{{ nginx_configs.keys() | list }}'
  notify:
    - restart nginx
  tags: [configuration, nginx]

- name: Check nginx syntax of configuration files
  shell: "{{ nginx_binary_name }} -t"
  register: result
  changed_when: "result.rc != 0"
  check_mode: false
  tags: [configuration, nginx]
